jobs:
  test_lambda:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/GSA/grace-securityhub
    steps:
      - checkout
      - run:
          name: Run Tests
          command: |
            pwd && make -C handler test
  release_lambda:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run:
          name: Build executable
          command: |
            pwd && make -C handler release
      - persist_to_workspace:
          root: .
          paths:
            - ./release/*
  validate:
    environment:
        AWS_DEFAULT_REGION: us-east-1
    docker:
      - image: hashicorp/terraform:0.12.6
    steps:
      - checkout
      - run:
          name: Install curl
          command: apk add --update curl
      - run:
          name: create release directory if it doesn't exist
          command: if [[! -d ../release ]]; then mkdir ../release; fi
      - run:
          name: touch zip if it doesn't exist
          command: if [[! -e ../release/grace-securityhub.zip ]]; then touch ../release/grace-securityhub.zip; fi
      - run:
          name: terraform init
          command: find . -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform init -input=false -backend=false) || exit 1; done
      - run:
          name: Validate Terraform configurations
          command: find . -name ".terraform" -prune -o -type f -name "*.tf" -exec dirname {} \;| sort -u | while read m; do (cd "$m" && terraform validate && echo "âˆš $m") || exit 1 ; done
      - run:
          name: Check if Terraform configurations are properly formatted
          command: if [[ -n "$(terraform fmt -write=false)" ]]; then echo "Some terraform files need be formatted, run 'terraform fmt' to fix"; exit 1; fi
      - run:
          name: Install tflint
          command: curl -L -o /tmp/tflint.zip https://github.com/wata727/tflint/releases/download/v0.9.2/tflint_linux_amd64.zip && unzip /tmp/tflint.zip -d /usr/local/bin
      - run:
          name: Check Terraform configurations with tflint
          command: tflint

workflows:
  version: 2
  build:
    jobs:
      - validate
      - test_lambda
      - release_lambda:
          requires:
            - test_lambda